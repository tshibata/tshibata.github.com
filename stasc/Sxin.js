/* generated by stasc 1.5 */
(function() {
	var doc = {};

doc.entry=function(){
	var n0=document.createElement('tr');
	var n1=document.createElement('td');
	n1.setAttribute('style','text-align: right;');
	Object.defineProperty(n0, 'Name',{
		set:function(v){n1.textContent=v;},
		get:function(){return n1.textContent;}
	});
	if(0<arguments.length){
		n0.Name=arguments[0];
	}
	n0.appendChild(n1);
	var n2=document.createElement('td');
	n2.appendChild(document.createTextNode('='));
	n0.appendChild(n2);
	var n3=document.createElement('td');
	var n4=document.createElement('span');
	Object.defineProperty(n0,'Value',{
		set:function(v){n3.replaceChild(v,n4);n4=v;},
		get:function(){return n4;}
	});
	n3.appendChild(n4);
	if(1<arguments.length){
		n0.Value=arguments[1];
	}
	n0.appendChild(n3);
	return n0;
};
doc.item=function(){
	var n0=document.createElement('tr');
	var n1=document.createElement('td');
	var n2=document.createElement('span');
	Object.defineProperty(n0,'Content',{
		set:function(v){n1.replaceChild(v,n2);n2=v;},
		get:function(){return n2;}
	});
	n1.appendChild(n2);
	if(0<arguments.length){
		n0.Content=arguments[0];
	}
	n0.appendChild(n1);
	return n0;
};
doc.list=function(){
	var n0=document.createElement('table');
	n0.setAttribute('style','border-left: 2px solid; border-radius: 5px;');
	var n1=document.createElement('tbody');
	Object.defineProperty(n0,'Items',{
		get:function(){return n1;}
	});
	n0.appendChild(n1);
	return n0;
};
doc.map=function(){
	var n0=document.createElement('table');
	n0.setAttribute('style','border: 1px solid;');
	var n1=document.createElement('thead');
	var n2=document.createElement('tr');
	var n3=document.createElement('td');
	n3.setAttribute('colspan','3');
	n3.setAttribute('style','text-align: center; border-bottom: 2px solid;');
	var n4=document.createElement('span');
	Object.defineProperty(n0, 'Type',{
		set:function(v){n4.textContent=v;},
		get:function(){return n4.textContent;}
	});
	n3.appendChild(n4);
	n2.appendChild(n3);
	n1.appendChild(n2);
	n0.appendChild(n1);
	var n5=document.createElement('tbody');
	Object.defineProperty(n0,'Entries',{
		get:function(){return n5;}
	});
	n0.appendChild(n5);
	return n0;
};

	var lastElement;
	var lastComment;
	var scanHtml = function(o) {
		if (o.nodeType == 1) {
			lastElement = o;
		} else if (o.nodeType == 8) {
			lastComment = o;
		}
		for (var i = 0; i < o.childNodes.length; i++) {
			scanHtml(o.childNodes[i]);
		}
	};
	var scanJson = function(o) {
		var container;
		switch (Object.prototype.toString.call(o)) {
		case "[object Number]":
			return document.createTextNode(o);
		case "[object String]":
			return document.createTextNode('"' + o + '"');
		case "[object Array]":
			container = doc.list();
			for (var i = 0; i < o.length; i++) {
				container.Items.appendChild(doc.item(scanJson(o[i])));
			}
			return container;
		default:
			container = doc.map();
			for (var key in o) {
				if (key === "nodeType") {
					container.Type = o.nodeType + "()";
				} else {
					container.Entries.appendChild(doc.entry(key, scanJson(o[key])));
				}
			}
			return container;
		}
	};
	scanHtml(document);
	var element = scanJson(JSON.parse(lastComment.nodeValue));
	lastElement.parentNode.insertBefore(element, lastElement);
})();

